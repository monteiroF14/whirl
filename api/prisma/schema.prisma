generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement()) @map("id")
  name             String
  email String @unique
  role             UserRole     @default(APPLICATION_USER)
  image_url        String       @default("https://img.freepik.com/free-vector/illustration-gallery-icon_53876-27002.jpg?size=626&ext=jpg&ga=GA1.1.1880011253.1699315200&semt=sph")
  refresh_token String @default("")
  quizzes      Quiz[]       @relation("UserQuizzes")
  liked_quizzes Quiz[]       @relation("UserLikesQuizzes")
  followers Follow[] @relation("UserHasFollowers")
  following Follow[] @relation("UserFollowsUsers")
  ratings      Ratings[]
}

model Follow {
  followerId Int 
  followingId Int
  follower User @relation("UserHasFollowers", fields: [followerId], references: [id])
  following User @relation("UserFollowsUsers", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model Quiz {
  id            Int          @id @default(autoincrement())
  name          String
  url           String
  image_url     String       @default("https://img.freepik.com/vetores-premium/quiz-logo_2728-12.jpg")
  created_at    DateTime     @default(now())
  visibility    Visibility
  genres        Genre[]      @relation("QuizHasGenres")
  views         Int          @default(0)
  rating        Float        @default(0)
  questions     Question[]   @relation("QuizOwnsQuestions")
  created_by_id Int
  created_by    User         @relation("UserQuizzes", fields: [created_by_id], references: [id])
  liked_by   User[]       @relation("UserLikesQuizzes")
  likes Int
  ratings   Ratings[]
}

model Question {
  id             Int          @id @default(autoincrement())
  description String
  answers        QuizAnswer[]
  correct_answer Int
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  quizId         Int
  quiz           Quiz         @relation("QuizOwnsQuestions", fields: [quizId], references: [id])
}

model QuizAnswer {
  id       Int     @id @default(autoincrement())
  description     String  
  question Question @relation(fields: [questionId], references: [id])
  questionId Int
}

model Ratings {
  id        Int      @id @default(autoincrement())
  rating    Int
  userId    Int
  quizId    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  quiz      Quiz     @relation(fields: [quizId], references: [id])

  @@unique([userId, quizId])
}

model Genre {
  id    Int      @id @default(autoincrement())
  name  String @unique
  quizzes Quiz[] @relation("QuizHasGenres")
}

enum Visibility {
  public
  private
}

enum UserRole {
  APPLICATION_USER
  SUPER_ADMIN
}

